{"version":3,"sources":["ImageSearch/ImageSearch.js","ImageList/ImageList.js","App.js","ImageView/ImageView.js","Router.js","index.js"],"names":["ImageSearch","handleGetRequest","className","onSubmit","type","autoComplete","name","placeholder","ImageList","props","images","map","image","key","id","style","marginBottom","src","largeImageURL","alt","tags","Link","to","pathname","state","API_KEY","App","error","e","a","async","preventDefault","searchTerm","target","elements","searchValue","value","url","fetch","request","json","response","hits","length","setState","this","color","textAlign","React","Component","ImageView","location","owner","user","pageURL","href","rel","Router","HashRouter","Switch","Route","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"4WAoBeA,G,MAfK,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBAGlB,OACI,yBAAKC,UAAU,eACX,0BAAMC,SAAUF,EAAkBC,UAAU,qBACxC,2BAAOE,KAAK,OAAOC,aAAa,MAAMC,KAAK,cAAcC,YAAY,yBAErE,gD,QC2BDC,G,MApCG,SAACC,GAKf,OACI,yBAAKP,UAAU,aAEX,yBAAKA,UAAU,OACVO,EAAMC,OAAOC,KAAI,SAACC,GACf,OACI,yBAAKC,IAAKD,EAAME,GAAIZ,UAAU,WAAWa,MAAO,CAAEC,aAAc,SAC5D,yBAAKd,UAAU,wBACX,yBAAKA,UAAU,mBAAmBe,IAAKL,EAAMM,cAAeC,IAAKP,EAAMQ,QAG3E,yBAAKlB,UAAU,kBACX,kBAACmB,EAAA,EAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAYX,EAAME,IAG1BU,MAAO,CAAEZ,WAET,oDCpB9Ba,EAAU,qCAgEDC,E,2MAzDbF,MAAQ,CACNd,OAAQ,GAERiB,MAAO,M,EAIT1B,iBAAmB,SAAO2B,GAAP,qBAAAC,EAAAC,OAAA,uDAEjBF,EAAEG,iBAEIC,EAAaJ,EAAEK,OAAOC,SAASC,YAAYC,MAE3CC,EANW,uCAM2BZ,EAN3B,cAMwCO,EANxC,4CAAAH,EAAA,MASKS,MAAMD,IATX,cASXE,EATW,kBAAAV,EAAA,MAWMU,EAAQC,QAXd,OAWXC,EAXW,OAcZT,GAEOS,EAASC,KAAKC,OAAS,EACjC,EAAKC,SAAS,CAACjB,MAAO,sDAItB,EAAKiB,SAAS,CAAElC,OAAQ+B,EAASC,KAAMf,MAAO,OAN9C,EAAKiB,SAAS,CAACjB,MAAO,2BAfP,uC,wEAiCjB,OACE,6BAGE,kBAAC,EAAD,CAAa1B,iBAAkB4C,KAAK5C,mBAKb,OAArB4C,KAAKrB,MAAMG,MAAiB,yBAAKZ,MAAO,CAAC+B,MAAO,MAAOC,UAAW,WAAtC,IAAmDF,KAAKrB,MAAMG,MAA9D,KAA8E,kBAAC,EAAD,CAAWjB,OAAQmC,KAAKrB,MAAMd,c,GAnDhIsC,IAAMC,WC+BTC,G,MArCG,SAACzC,GAAU,MAGoCA,EAAM0C,SAAS3B,MAAMZ,MAA3DA,EAHE,EAGjBM,cAAsBE,EAHL,EAGKA,KAAYgC,EAHjB,EAGWC,KAAaC,EAHxB,EAGwBA,QAEjD,OACI,yBAAKpD,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,wBAEX,yBAAKe,IAAKL,EAAOO,IAAKC,EAAMlB,UAAU,kCACtC,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,IAAb,gBAIJ,yBAAKA,UAAU,mBAGX,wCAAa,kCAAQkD,EAAR,KAAb,KAEA,0CAAe,8BAAM,uBAAGG,KAAMD,EAASrB,OAAO,SAASuB,IAAI,uBAAtC,qBAErB,4BAAQtD,UAAU,yBAAlB,IAA2C,kBAACmB,EAAA,EAAD,CAAMC,GAAG,KAAT,kBCRxDmC,EAfA,WAEX,OAEI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWpC,EAAKqC,OAAK,IACrC,kBAACH,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWZ,OCRpDc,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,W","file":"static/js/main.5604222c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './ImageSearch.css'\r\n\r\n// This is a functional component. Inside functional components, the this keyword does not work. \r\nconst ImageSearch = ({handleGetRequest}) => {\r\n\r\n   \r\n    return(\r\n        <div className=\"imageSearch\">\r\n            <form onSubmit={handleGetRequest} className=\"imageSearch__form\">\r\n                <input type=\"text\" autoComplete=\"off\" name=\"searchValue\" placeholder=\"search for images...\" />\r\n\r\n                <button> Search </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ImageSearch","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport \"./ImageList.css\"\r\nconst ImageList = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                {props.images.map((image) => {\r\n                    return (\r\n                        <div key={image.id} className=\"col-md-4\" style={{ marginBottom: \"2rem\" }}>\r\n                            <div className=\"imageList__container\">\r\n                                <img className=\"imageList__image\" src={image.largeImageURL} alt={image.tags} />\r\n                            </div>\r\n\r\n                            <div className=\"image__details\">\r\n                                <Link to={{\r\n                                    pathname: `/image/${image.id}`,\r\n\r\n                                    // We have access to the image in ImageView through the state\r\n                                    state: { image }\r\n                                }}>\r\n                                    <button> View </button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageList","import React from \"react\"\r\n\r\n\r\n// Components\r\nimport ImageSearch from './ImageSearch/ImageSearch'\r\nimport ImageList from './ImageList/ImageList'\r\n\r\nconst API_KEY = \"17616775-7520c8f78c150fab8bc675fe4\"\r\n\r\n\r\n\r\n// Class based component\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    images: [],\r\n\r\n    error: null\r\n  }\r\n\r\n  // This Method is responsibile for making request to the url. This method will be run when the form is submitted on ImageSearch\r\n  handleGetRequest = async (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const searchTerm = e.target.elements.searchValue.value\r\n\r\n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${searchTerm}&image_type=photo&pretty=true`\r\n\r\n\r\n    const request = await fetch(url)\r\n\r\n    const response = await request.json()\r\n\r\n    // IF input field is empty, then set error. Also if no images are returned then give error\r\n    if (!searchTerm) {\r\n      this.setState({error: \"Please provide a value\"})\r\n    } else if( !response.hits.length > 0 ) {\r\n      this.setState({error: \"No results found, please search for another term \"})\r\n    }\r\n    else {\r\n\r\n      this.setState({ images: response.hits, error: null })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n\r\n        {/* Trigger handle get request when form is submitted on ImageSearch component. We will pass it as props */}\r\n        <ImageSearch handleGetRequest={this.handleGetRequest} />\r\n\r\n\r\n        {/* If error exists then display error message else display the images. */}\r\n        { \r\n          this.state.error !== null ? <div style={{color: \"red\", textAlign: \"center\"}}> {this.state.error} </div> : <ImageList images={this.state.images} />\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport \"./ImageView.css\"\r\n\r\nconst ImageView = (props) => {\r\n\r\n    // Destructuring\r\n    const { largeImageURL: image, tags, user: owner, pageURL } = props.location.state.image\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <div className=\"imageView__container\">\r\n\r\n                        <img src={image} alt={tags} className=\"imageView__img img-responsive\" />\r\n                        <div className=\"imageView__copyright\">\r\n                            <p className=\"\">&copy;pixabay</p>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"imageView__text\">\r\n\r\n\r\n                            <h4> Credit: <span> {owner} </span> </h4>\r\n\r\n                            <h4> Download: <span><a href={pageURL} target=\"_blank\" rel=\"noopener noreferrer\"> Go to Download</a></span></h4>\r\n\r\n                            <button className=\"active-recipe__button\"> <Link to=\"/\"> Home </Link></button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ImageView","import React from 'react'\r\n\r\nimport {HashRouter, Switch, Route} from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport ImageView from './ImageView/ImageView'\r\n\r\nconst Router = () => {\r\n\r\n    return (\r\n\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route path=\"/\" component={App} exact />\r\n                <Route path=\"/image/:id\" component={ImageView} />\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Router","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./styles/styles.css\"\r\nimport Router from \"./Router\"\r\n\r\nReactDOM.render(<Router />, document.getElementById(\"root\"))"],"sourceRoot":""}